
main : THREAD_TYPE;
t1 : THREAD_TYPE;
t2 : THREAD_TYPE;
id1_W_main : MEM_OP_TYPE;
ASSERT (id1_W_main.ID = id1_W_main_Type) AND
       (id1_W_main.O = W) AND
       (id1_W_main.T = NT) AND
       (id1_W_main.R = I) AND
       (id1_W_main.M = {Int(0), Int(1), Int(2), Int(3)}) AND
       (id1_W_main.B = x);

id2_W_t1 : MEM_OP_TYPE;
ASSERT (id2_W_t1.ID = id2_W_t1_Type) AND
       (id2_W_t1.O = W) AND
       (id2_W_t1.T = NT) AND
       (id2_W_t1.R = U) AND
       (id2_W_t1.M = {Int(0)}) AND
       (id2_W_t1.B = x);

id3_W_t1_0 : MEM_OP_TYPE;
ASSERT (id3_W_t1_0.ID = id3_W_t1_0_Type) AND
       (id3_W_t1_0.O = W) AND
       (id3_W_t1_0.T = NT) AND
       (id3_W_t1_0.R = SC) AND
       (id3_W_t1_0.M = {Int(1)}) AND
       (id3_W_t1_0.B = x);

id3_W_t1_1 : MEM_OP_TYPE;
ASSERT (id3_W_t1_1.ID = id3_W_t1_1_Type) AND
       (id3_W_t1_1.O = W) AND
       (id3_W_t1_1.T = NT) AND
       (id3_W_t1_1.R = SC) AND
       (id3_W_t1_1.M = {Int(2)}) AND
       (id3_W_t1_1.B = x);

id3_W_t1_2 : MEM_OP_TYPE;
ASSERT (id3_W_t1_2.ID = id3_W_t1_2_Type) AND
       (id3_W_t1_2.O = W) AND
       (id3_W_t1_2.T = NT) AND
       (id3_W_t1_2.R = SC) AND
       (id3_W_t1_2.M = {Int(3)}) AND
       (id3_W_t1_2.B = x);

id4_R_t2_0 : MEM_OP_TYPE;
ASSERT (id4_R_t2_0.ID = id4_R_t2_0_Type) AND
       (id4_R_t2_0.O = R) AND
       (id4_R_t2_0.T = NT) AND
       (id4_R_t2_0.R = SC) AND
       (id4_R_t2_0.M = {Int(0), Int(1)}) AND
       (id4_R_t2_0.B = x);

id4_R_t2_1 : MEM_OP_TYPE;
ASSERT (id4_R_t2_1.ID = id4_R_t2_1_Type) AND
       (id4_R_t2_1.O = R) AND
       (id4_R_t2_1.T = NT) AND
       (id4_R_t2_1.R = SC) AND
       (id4_R_t2_1.M = {Int(2), Int(3)}) AND
       (id4_R_t2_1.B = x);

ASSERT main.E = {id1_W_main};
ASSERT main.PO = empty_rel_set;
ASSERT t1.E = {id2_W_t1, id3_W_t1_0, id3_W_t1_1, id3_W_t1_2};
ASSERT t1.PO = {(id2_W_t1, id3_W_t1_0), (id2_W_t1, id3_W_t1_1), (id2_W_t1, id3_W_t1_2), (id3_W_t1_0, id3_W_t1_1), (id3_W_t1_0, id3_W_t1_2), (id3_W_t1_1, id3_W_t1_2)};
ASSERT t2.E = {id4_R_t2_0, id4_R_t2_1};
ASSERT t2.PO = {(id4_R_t2_0, id4_R_t2_1)};
ASSERT ev_set = {id1_W_main, id2_W_t1, id3_W_t1_0, id3_W_t1_1, id3_W_t1_2, id4_R_t2_0, id4_R_t2_1};
ASSERT rom_ev_set = {id4_R_t2_0, id4_R_t2_1};
ASSERT wom_ev_set = {id1_W_main, id2_W_t1, id3_W_t1_0, id3_W_t1_1, id3_W_t1_2};
ASSERT pair_ev_set = {(id1_W_main, id2_W_t1), (id1_W_main, id3_W_t1_0), (id1_W_main, id3_W_t1_1), (id1_W_main, id3_W_t1_2), (id1_W_main, id4_R_t2_0), (id1_W_main, id4_R_t2_1), (id2_W_t1, id1_W_main), (id2_W_t1, id3_W_t1_0), (id2_W_t1, id3_W_t1_1), (id2_W_t1, id3_W_t1_2), (id2_W_t1, id4_R_t2_0), (id2_W_t1, id4_R_t2_1), (id3_W_t1_0, id1_W_main), (id3_W_t1_0, id2_W_t1), (id3_W_t1_0, id3_W_t1_1), (id3_W_t1_0, id3_W_t1_2), (id3_W_t1_0, id4_R_t2_0), (id3_W_t1_0, id4_R_t2_1), (id3_W_t1_1, id1_W_main), (id3_W_t1_1, id2_W_t1), (id3_W_t1_1, id3_W_t1_0), (id3_W_t1_1, id3_W_t1_2), (id3_W_t1_1, id4_R_t2_0), (id3_W_t1_1, id4_R_t2_1), (id3_W_t1_2, id1_W_main), (id3_W_t1_2, id2_W_t1), (id3_W_t1_2, id3_W_t1_0), (id3_W_t1_2, id3_W_t1_1), (id3_W_t1_2, id4_R_t2_0), (id3_W_t1_2, id4_R_t2_1), (id4_R_t2_0, id1_W_main), (id4_R_t2_0, id2_W_t1), (id4_R_t2_0, id3_W_t1_0), (id4_R_t2_0, id3_W_t1_1), (id4_R_t2_0, id3_W_t1_2), (id4_R_t2_0, id4_R_t2_1), (id4_R_t2_1, id1_W_main), (id4_R_t2_1, id2_W_t1), (id4_R_t2_1, id3_W_t1_0), (id4_R_t2_1, id3_W_t1_1), (id4_R_t2_1, id3_W_t1_2), (id4_R_t2_1, id4_R_t2_0)};

ASSERT AO = main.PO | t1.PO | t2.PO;
ASSERT locs = {Int(0), Int(1), Int(2), Int(3)};
ASSERT comp_RF = {(id4_R_t2_0, id1_W_main), (id4_R_t2_0, id2_W_t1), (id4_R_t2_0, id3_W_t1_0), (id4_R_t2_1, id1_W_main), (id4_R_t2_1, id3_W_t1_1), (id4_R_t2_1, id3_W_t1_2)};
ASSERT comp_RBF = {((id4_R_t2_0, id1_W_main), Int(0)), ((id4_R_t2_0, id1_W_main), Int(1)), ((id4_R_t2_0, id2_W_t1), Int(0)), ((id4_R_t2_0, id3_W_t1_0), Int(1)), ((id4_R_t2_1, id1_W_main), Int(2)), ((id4_R_t2_1, id1_W_main), Int(3)), ((id4_R_t2_1, id3_W_t1_1), Int(2)), ((id4_R_t2_1, id3_W_t1_2), Int(3))};
